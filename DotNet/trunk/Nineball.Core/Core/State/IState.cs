////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
//	danmaq Nineball-Library
//		Copyright (c) 2008-2012 danmaq all rights reserved.
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

namespace Danmaq.Nineball.Core.State
{

	//* ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ *
	/// <summary>状態を構成するために必要なメソッドを定義します。</summary>
	public interface IState
	{

		//* instance methods ───────────────────────────*

		//* -----------------------------------------------------------------------*
		/// <summary>この状態が開始された際に呼び出されます。</summary>
		/// 
		/// <param name="data">
		/// コンテクストと状態間で共有するカプセル化されたデータ。
		/// </param>
		void Setup(IContextEncapsulation data);

		//* -----------------------------------------------------------------------*
		/// <summary>状態を実行する際に呼び出されます。</summary>
		/// 
		/// <param name="data">
		/// コンテクストと状態間で共有するカプセル化されたデータ。
		/// </param>
		void Execute(IContextEncapsulation data);

		//* -----------------------------------------------------------------------*
		/// <summary>状態を終了する際に呼び出されます。</summary>
		/// 
		/// <param name="data">
		/// コンテクストと状態間で共有するカプセル化されたデータ。
		/// </param>
		void TearDown(IContextEncapsulation data);
	}
}
