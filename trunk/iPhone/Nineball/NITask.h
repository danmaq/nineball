////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
//	Nineball Library Core for iPhone	Programmed by Mc/danmaq
//		──タスク基底インターフェイス
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#import "nineball.h"

@class NCTaskManager;

//*-----------------------------------------------------------------*
// タスク用インターフェイスです。
// タスク管理クラスに登録するためには、このインターフェイスを実装するか、
// またはNCTaskBaseクラスを継承します。
//*-----------------------------------------------------------------*
@protocol NITask

// 優先度。
// ここにおける優先度とは、管理クラスに登録されたタスクが実行される順序のことで、
// いかなる優先度でも必ず1フレームに1度実行されます。
// !!注意!!：lockPriorityに真値を代入した後は実行優先度を変更しないでください。
@property (readonly) NSUInteger priority;

// 一時停止が有効かどうか。
// これが無効の場合は管理クラスのpauseプロパティを有効にしても処理は停止しません。
@property (readonly) BOOL pauseAvaliable;

// 優先度をロックするかどうか。
// 管理クラスに登録される際に自動的に真値が設定されます。
// このプロパティに真値を代入した後はpriorityプロパティを変更しないでください。
// セッタは{ _lockProperty = _lockProperty || value }と記述することを推奨します。
@property BOOL lockPriority;

// タスク管理クラスへのポインタ。
// 管理クラスに登録される際に自動的に設定されます。
@property (retain) NCTaskManager *taskManager;

// タスクを1フレーム分更新します。
// このタスクの所属する管理クラスにおいて、updateメソッドを実行すると自動的に呼び出されます。
// 自殺させたい場合は、このメソッドで偽値を返してください。
- (BOOL)update;

// タスクの描画を1フレーム分更新します。
// このタスクの所属する管理クラスにおいて、drawメソッドを実行すると自動的に呼び出されます。
- (void)draw;

@optional

// タスクが登録されたときに1度だけ呼び出されます。
// この段階では、既にtaskManagerに値が代入され、lockPriorityが有効になっています。
- (void)taskDidRegist;

@end
